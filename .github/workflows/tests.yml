name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l *.go | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l *.go
            exit 1
          fi

      - name: Check imports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          if [ "$(goimports -l *.go | wc -l)" -gt 0 ]; then
            echo "The following files have import issues:"
            goimports -l *.go
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run go build
        run: go build ./...

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          
      - name: Run golangci-lint
        run: |
          $(go env GOPATH)/bin/golangci-lint run --config .golangci.yml --timeout 5m || true
        continue-on-error: true

  test-on-linux-x64:
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache built libraries
        uses: actions/cache@v4
        with:
          path: |
            libimagequant/target/
            libimagequant/libimagequant.a
          key: ${{ runner.os }}-libs-${{ hashFiles('**/Makefile', '**/*.patch', '.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-libs-

      - name: Make
        run: |
          make

      - name: Test
        run: |
          go test -v ./...

  test-on-windows:
    runs-on: windows-latest
    environment: test
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Install build tools
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: git base-devel mingw-w64-x86_64-toolchain mingw-w64-ucrt-x86_64-rust mingw-w64-ucrt-x86_64-go unzip
          cache: true

      - name: Cache CMake
        id: cache-cmake
        uses: actions/cache@v4
        with:
          path: /usr/local/cmake
          key: ${{ runner.os }}-cmake-3.30.5

      - name: Install cmake version 3
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: |
          # Remove any existing cmake package
          pacman -R --noconfirm mingw-w64-ucrt-x86_64-cmake || true
          # Download and install cmake 3.30.5 (latest version 3.x)
          curl -L https://github.com/Kitware/CMake/releases/download/v3.30.5/cmake-3.30.5-windows-x86_64.zip -o cmake.zip
          unzip -q cmake.zip
          # Move cmake to a permanent location
          mkdir -p /usr/local
          mv cmake-3.30.5-windows-x86_64 /usr/local/cmake

      - name: Setup cmake PATH
        run: |
          # Add cmake to PATH
          echo 'export PATH="/usr/local/cmake/bin:$PATH"' >> ~/.bashrc
          export PATH="/usr/local/cmake/bin:$PATH"
          # Verify cmake version
          cmake --version
          which cmake

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache built libraries
        uses: actions/cache@v4
        with:
          path: |
            libimagequant/target/
            libimagequant/libimagequant.a
          key: ${{ runner.os }}-libs-${{ hashFiles('**/Makefile', '**/*.patch', '.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-libs-

      - name: Make
        run: |
          export PATH="/usr/local/cmake/bin:$PATH"
          make

      - name: Test
        run: |
          export PATH="/usr/local/cmake/bin:$PATH"
          export LANG=ja_JP.UTF-8
          export LC_ALL=ja_JP.UTF-8
          make test

  test-on-macos:
    runs-on: macos-latest
    environment: test

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Cache Homebrew
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Cellar
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/tests.yml') }}
          restore-keys: |
            ${{ runner.os }}-brew-

      - name: Install build tools
        run: |
          # Install cmake
          brew install cmake
          # Install rust
          brew install rust

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache built libraries
        uses: actions/cache@v4
        with:
          path: |
            libimagequant/target/
            libimagequant/libimagequant.a
          key: ${{ runner.os }}-libs-${{ hashFiles('**/Makefile', '**/*.patch', '.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-libs-

      - name: Make
        run: |
          make

      - name: Test
        run: |
          make test
